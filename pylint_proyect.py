# -*- coding: utf-8 -*-
"""pyLintProyect.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dO6c25BH6aWS7O-AZoHvi8-OO-ll2zUc
"""

pip install  pylint --upgrade

"""
Este script permite hacer ingenieria inversa de un codigo fuante convertirlo a diagrama de clases.
Tambien encuentra código incorrecto que funciona correctamente (code smells).
"""
#Permite cargar el archivo de nuestro ordenador a colab
from google.colab import files
#Permite para mostrar una imagen
import matplotlib.pyplot as plt
import cv2
import shutil
#Permite hacer modificaciones a los archivos 
import os
from os import remove

def duplicar_archivo(fuente):
  destino = "/content/codeTemp.py"      #La nueva ruta del archivo py y cambio su nombre
  shutil.copy(fuente, destino)              #Realiza la accion de compiar el archivo

def borrar_archivo():
  remove("/content/codeTemp.py" )       #Borra el archivo dupliacdo que se utilizao para diagramar

def diagramar(lista, opcion):
  fuente = "/content/"+lista[opcion-1]      #recibo la ruta del archivo py       
  duplicar_archivo(fuente) 
  !pyreverse -o png -p codeTemp "/content/codeTemp.py" # Crea el diagrama y la imagen
  dirImage = "/content/classes_codeTemp.png"   # Ruta de la imagen del diagrama         
  image = cv2.imread(dirImage)                     # Guardo los dato en una variable para luego mostrar la imagen por consola
  plt.imshow(image)                                # Imprimo la imagen por consola
  plt.grid(False)                                  #Sirve para quitar las rayitas en la imagen
  seperador()
  print("El archivo elegido es: [" + lista[opcion-1] + "] \nA continuacion se enlistara los codigos incorrectos"+
        "que funcionan correctamente y en que se pueden mejorar:")
  !pylint "codeTemp.py"                        #Busca los codigos incorrecto que funciona correctamente (code smells)
  borrar_archivo()

def cargar_archivo(): #Subiendo un archivo
  files.upload()  

def mostrar_archivo():   #Verifica que archivos tengo guardado
  print("Elija el archivo que desea diagramar:")
  ejemplo_dir = '/content'                        # Es la ruta de la carpeta donde se guardan todos los archivos
  contador = 0
  lista =[""]
  opcion = -1
  with os.scandir(ejemplo_dir) as ficheros:       # Hace una copia de los archivos  en la variable ficheros
    for fichero in ficheros:                      #Recorro mi carpeta en busca de archivos py
      if (fichero.name.endswith(".py")):          # Si es un archivo py se guarda su nombre en un vector
        if contador==0:
          lista[contador] = fichero.name
        else:
          lista.extend([fichero.name])
        contador +=1;
        print(str(contador)+".  "+fichero.name)
  while True :                                    # Controla la entra de datos por medio de la consola
    try:
      opcion = int(input())                       #Ingreso de datos por consola tipo entero
    except:
      print("Eso no es un numero entero. Intentelo de nuevo.")
    if (opcion > contador):
      print("El numero elegido esta fuera del rango")
    if (opcion-1 < contador and opcion > -1):
      break
  diagramar(lista,opcion)

def seperador():
  print("-------------------------------------------------------------------------------------------------------\n")

def main() -> None:                              # Este es el menu, controla la entra de datos por medio de la consola
  desision=""
  while True :
    print("Menu \n1. Cargar Archivo \n2. Ver archivos guardados \nElija una opcion o presione otra tecla para salir. ")
    desicion = input();                          #Ingreso de datos por consola tipo cadena
    if desicion == "1":
      cargar_archivo()
      seperador()
    elif desicion == "2":
      seperador()
      mostrar_archivo()
      seperador()
      print ("Si sale vacío es porque el código no tiene nada que diagramar.\nGracias por su atencion. ")
    else: 
      print ("Gracias por su atencion.")
    if desicion !="1": #and desicion != "2"
        break
    
#####################################################################################################################
if __name__ == '__main__':
    main()